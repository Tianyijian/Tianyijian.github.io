<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Maven 构建 java 项目（一）]]></title>
    <url>%2F2018%2F05%2F12%2Fmaven-buid-java%2F</url>
    <content type="text"><![CDATA[大家可能经常使用 eclipse 写 java 项目，那么怎么检验项目在脱离 eclipse 环境时依旧能成功运行呢？今天我想要介绍的就是使用 Maven 构建项目，将一步一步的带领大家进行 java 项目的构建。 概要本文为系列文章第一篇，主要介绍了 Maven 的安装配置，命令的简单使用，pom.xml 的简单理解，jar包的运行，以及为 jar 包指定主类的问题，主要是基础方面的使用。 安装配置下载Maven官方下载地址 我是Win10系统，下载了 apache-maven-3.5.3-bin.zip，解压会得到 apache-maven-3.5.3 文件夹。 配置我将其移动到了 C:\Program Files\ 下，接着需配置环境变量 。 添加位置： 控制面板-&gt;系统和安全-&gt;系统-&gt;高级系统设置-&gt;环境变量-&gt;系统变量-&gt;Path，在其中添加一项 C:\Program Files\apache-maven-3.5.3\bin，保存设置。 检验在命令行中输入 mvn --version，会看到打印的版本信息。 初始构建可参考： Maven Documentation -&gt; Maven in 5 Minutes 常用命令mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false //快速构建maven项目，分别指定了groupId， artifactId， 构建类型， 并关闭交互模式。 //简化起见，后四个参数可省略，构建时会采用交互模式，提示用户输入相关信息。 mvn compile //项目编译 mvn test //进行测试文件的测试 mvn package //打包，生成可运行jar包，其会同时执行 compile 与 test 命令。 mvn clean //打包后会生成 target 文件夹，该命令删除 target 文件夹。 初始项目选择一个位置，在命令行中执行命令 mvn archetype:generate，比如我选择在桌面。执行过程中，前两次暂停可直接回车跳过，第三次即开始提示输入 groupId、artifactId等，我的输入如下，后面的则直接回车跳过即可。 Define value for property &apos;groupId&apos;: com.mycompany.app Define value for property &apos;artifactId&apos;: my-app Define value for property &apos;version&apos; 1.0-SNAPSHOT: : Define value for property &apos;package&apos; com.mycompany.app: : 提示完成之后，会在桌面生成 my-app 文件夹，其采用默认的项目目录结构，如下： my-app |-- pom.xml `-- src |-- main | `-- java | `-- com | `-- mycompany | `-- app | `-- App.java `-- test `-- java `-- com `-- mycompany `-- app `-- AppTest.java pom.xml 即为配置文件，想对build进行设置，即需更改此文件。其所在的目录称为根目录。你可以在根目录下尝试 mvn compile、mvn test、mvn package、mvn clean等操作，看看对新生成的 target 目录分别有什么影响。 pom 文件生成的pom文件主要如下，可能会有所差别，但是标签大致都差不多，需要注意的是标签的结构，哪个在哪个里边，以后修改的时候要找对位置。可参考文档：Maven doc：Introduction to the POMMaven doc：Getting Started Guide &lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.mycompany.app&lt;/groupId&gt; &lt;artifactId&gt;my-app&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;name&gt;my-app&lt;/name&gt; &lt;!-- FIXME change it to the project&apos;s website --&gt; &lt;url&gt;http://www.example.com&lt;/url&gt; &lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;maven.compiler.source&gt;1.7&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.7&lt;/maven.compiler.target&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;4.11&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;pluginManagement&gt;&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt; &lt;plugins&gt; &lt;plugin&gt; ... &lt;/plugin&gt; &lt;/plugins&gt; &lt;/pluginManagement&gt; &lt;/build&gt; &lt;/project&gt; jar 包运行在成功执行打包操作之后，你会发现 target 目录下生成了可执行的 jar 包，那么怎么运行呢？ 不含主类的 jar 包运行 目前项目即为这种情况，并没指定 jar 包的主类，就是第一个要执行的类。此时需将 jar 包作为环境依赖，先 cd 进入 target 目录，执行命令如下: java -cp my-app-1.0-SNAPSHOT.jar com.mycompany.app.App 控制台会打印 Hello World!，即意味着你的 jar 包生成成功，本次项目构建成功。 注意：最后一个参数即为你要执行的类以及路径，不能使用类名的全称 App.java。 含主类的 jar 包运行 直接执行 jar 包即可，我们在后面会介绍如何设置主类。 java -jar my-app-1.0-SNAPSHOT.jar 添加主类如何为 jar 文件设置主类呢？在 pom.xml 相应标签下进行如下配置： &lt;!-- add mainClass --&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;archive&gt; &lt;manifest&gt; &lt;addClasspath&gt;true&lt;/addClasspath&gt; &lt;mainClass&gt;com.mycompany.app.App&lt;/mainClass&gt; &lt;!-- App.java 即为主类名--&gt; &lt;/manifest&gt; &lt;/archive&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; 成功生成 jar 包之后，照上边介绍的运行即可看到输出 Hello World!。 java -jar my-app-1.0-SNAPSHOT.jar 总结这一篇主要对如何使用 maven 进行简单的项目构建，较为基础，也往往不能满足项目的基本需求。下一篇就将要针对常见的问题进行解决，比如尝试解决了项目目录不是 Maven 默认目录的问题 ，编码不可映射问题，以及使用多个外部 jar 的问题。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>maven</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu 使用 QQ]]></title>
    <url>%2F2018%2F05%2F08%2Fubuntu-use-qq%2F</url>
    <content type="text"><![CDATA[自我感觉使用 ubuntu 最难受的莫过于没有 QQ 了，微信好歹有个网页版，QQ 现在连网页版都没有了。于是研究了研究，解决了 ubuntu 使用 QQ 的问题。 简介小编使用的系统是 Ubuntu 16.04 LTS，最终的方案是 Crossover + QQ 8.9，Crossover 是一款可以跨系统使用软件的软件，下载的 QQ 是从 Deepin 系统获取的。大概是两者之间有协议，因此兼容性很好，而不是像直接从 Crossover 软件上下载 QQ 使用那样，在Linux系统使用会有各种奇妙的问题。 下载 下载 crossover 可以从官网上下载 Crossover，其最新的版本是 crossover_linux_17.1.5。不过小编没有进行尝试，使用的是 crossover_16.2.5-1，但是貌似官网上没有找到 crossover 以前版本的下载入口呀！ 偶然之下，小编找到了这个 神奇的网站，竟然可以下载历史版本，小编使用的版本也是来自于此。 下载 QQ 8.9 Deepin QQ 下载地址 ，需要下载的是 apps.com.qq.im_8.9.19990deepin14_i386.deb。小编发现退个网站目录，竟然有很多软件，突然有点激动，是不是都可以装在 Ubuntu 上呀！以后再研究。 安装 安装 Crossover $ sudo dpkg -i crossover_16.2.5-1.deb 注意这是正版软件，可以先试用，有能力的可以购买正版。至于绿色软件小编还在研究之中。 安装 QQ 注意 ： 此处重点，不是直接安装！ // 将 deb 文件解压 (注意路径) $ dpkg -X apps.com.qq.im_8.9.19990deepin14_i386.deb /home/tian/Downloads // 将解压得到的 apps.com.qq.im 移动到根目录相应位置下（注意路径） $ sudo mv /home/tian/Downloads/opt/cxoffice/support/apps.com.qq.im /opt/cxoffice/support/ 使用 打开 Crossover，即可看到 QQ 的图标了，打开登录即可。 快捷方式的添加 将上图中的 QQ logo 直接拖拽到桌面，即可形成打开 QQ 的快捷方式，打开就可以把它锁定在 Launcher。 但是可以看到图标很丑，并没有 QQ 的样子。 怎么改呢？很简单，找一张 QQ 的 logo 图片，对快捷方式右键-&gt;Properties，即可打开如下图的界面，点击图片图标更换即可。 下载文件的位置 大家熟悉的 QQ 下载文件夹FileRecv又在哪里呢？ 小编在 /Home/tian/Documents/Tencent Files/qqNumber中找到了。 最后扯得比较多，其实真正关键的就那几步，有什么问题欢迎留言交流。小编再遇到问题，也会及时更新这篇博客，谢谢欣赏！]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>qq</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu wifi 联网问题]]></title>
    <url>%2F2018%2F04%2F05%2Fubuntu-wifi%2F</url>
    <content type="text"><![CDATA[高高兴兴的装了双系统 Win10 + Ubuntu 16.04 LTS,本来想愉快的开始 Ubuntu 美化, 结果发现 wifi 都连不上,开玩笑,这要怎么愉快的玩耍呢? 于是研究了研究,成功得解决了新装 ubuntu 不能连接 wifi 的问题. 问题点击右上角 WLAN 图标无 wifi Terminal 输入 $ ifconfig, 会发现没有 wlan 选项. 解决在不知道装什么驱动的情况下,推荐使用 ubuntu 原生 wifi 驱动. 可以先尝试步骤3,4,若无则从步骤1开始. 将 Ubuntu 和手机用数据线连接,然后共享热点,此时 Ubuntu 即可上网. 更新软件,即在终端输入: $ sudo apt-get update 然后打开 Ubuntu 自带软件 Software &amp; Updates (若不知道如何打开,可按 系统键win 进行搜索), 勾选驱动 Broadcom Corporation: 点击 Apply Changes, 保存退出,重启电脑即可. 输入 $ ifconfig, 即可看到多出了 wlp3so,输入 $ rfkill list,也看到了 Wireless. 意外若重启电脑,发现右上角 WLAN 图标点击后并没有 Enable Wi-Fi 选项, 你需要检查电脑开机时 BIOS 界面的 Secure Boot 是否为 Disabled. 原因是专用驱动是闭源的，而ubuntu开源，微软认为“闭源系统是不安全的”，所以闭源的软件在开启 secure boot 的时候不能启用。 小编使用的华硕电脑,开机出现品牌 logo 时点击 F2, 即进入 BIOS 界面, Secure Boot 不能更改,将 Secure Boot Control 设为 Disabled 即可.]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>wifi</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu 美化手册]]></title>
    <url>%2F2018%2F04%2F05%2Fubuntu-beautify%2F</url>
    <content type="text"><![CDATA[新装了 Ubuntu 16.04 ,闲不住的我鼓捣着如何让 ubuntu 更美, 于是多方收集整理, 写了这篇博客以记录自己的美化过程. 更新源设置源为 aliyun,国内访问的速度更快. 然后执行 $ sudo apt-get update $ sudo apt-get upgrade 删除 删除 Amazon 链接$ sudo apt-get remove unity-webapps-common 卸载 LibreOffice$ sudo apt-get remove libreoffice-common 删除不常用软件 $ sudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot $ sudo apt-get remove gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku landscape-client-ui-install $ sudo apt-get remove onboard deja-dup 主题美化 安装 Unity 美化工具$ sudo apt-get install unity-tweak-tool 安装 Flatabulous 主题及图标 sudo add-apt-repository ppa:noobslab/themes sudo apt-get update sudo apt-get install flatabulous-theme sudo add-apt-repository ppa:noobslab/icons sudo apt-get update sudo apt-get install ultra-flat-icons 安装软件 Deb 软件安装命令: $ sudo dpkg -i xxx.deb # 安装 $ sudo apt-get install -f # 解决安装过程中依赖问题 $ sudo dpkg -i xxx.deb # 再次安装 $ sudo apt-get autoremove # 移除无用依赖 安装搜狗输入法 参考: install sogou on ubuntu 16.04 Ubuntu系统安装搜狗（sougou for linux）输入法详细教程 安装 WPS http://linux.wps.cn/ 安装谷歌浏览器 https://www.google.com/chrome/ 安装 chrome 插件SwitchyOmega https://github.com/FelisCatus/SwitchyOmega/releases 安装 Shadowsocks $ sudo apt-get install shadowsocks 安装截图工具shutter $ sudo apt-get install shutter 安装 vim $ sudo apt-get install vim 安装 git $ sudo apt-get install git 安装 haroopad ( markdown 编辑器) http://pad.haroopress.com/user.html 安装 gedit 插件 $ sudo apt-get install gedit-plugins 资料: gedit 帮助文档 安装 zsh 及 oh-my-zsh ( Terminal 美化) oh my zsh 官网: http://ohmyz.sh/ $ sudo apt-get install zsh $ sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot; 更换主题请参考: https://github.com/robbyrussell/oh-my-zsh/wiki/Themes 搭建安卓环境 参考: 在Ubuntu搭建安卓开发环境 安装 QQ 参考: Ubuntu 使用 QQ]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>beautify</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu 开机动画美化]]></title>
    <url>%2F2018%2F04%2F05%2Fubuntu-boot-animation%2F</url>
    <content type="text"><![CDATA[刚鼓捣完电脑把 Ubuntu 16.04 的 grub 引导页面给改了,又怎么能放着开机启动页面不管呢?于是小编研究了研究,成功给开机也换上了个酷炫的动画效果.话不多说,来一波操作吧. 选择主题Plymouth Themes 上有许多主题,选择一个,下载到本地.我选择了这个 注意 : 如果你选择的主题文件包含大写,请 跳至注意. 解压安装找到下载文件所在的文件夹,解压之后将其移动到 /usr/share/plymouth/themes 文件夹中,然后安装. $ tar zvxf Paw-Ubuntu-Floral.tar.gz $ sudo cp -r Paw-Ubuntu-Floral /usr/share/plymouth/themes $ sudo update-alternatives --install /usr/share/plymouth/themes/default.plymouth default.plymouth /usr/share/plymouth/themes/Paw-Ubuntu-Floral/Paw-Ubuntu-Floral.plymouth 100 更改配置使用命令更改 default.plymouth 主题文件,输入数字选择刚才的主题 $ sudo update-alternatives --config default.plymouth 查看更改完成之后我们查看 default.plymouth 文件: [Plymouth Theme] Name=Paw Ubuntu/Mint Floral theme Description=Paw Ubuntu/Mint Floral plymouth theme ModuleName=script [script] ImageDir=/usr/share/plymouth/themes/Paw-Ubuntu-Floral ScriptFile=/usr/share/plymouth/themes/Paw-Ubuntu-Floral/mdv.script 其实就是 ImageDir 和 ScriptFile 进行了更改,因此在上边更改配置时不想用命令的可以直接手动在这里更改. 保存重新生成镜像文件,然后就开机试试吧. $ sudo update-initramfs -u 如果此过程中报如下的错,是因为 xxx.plymouth 内容中有 /lib/share. W: plymouth module (/usr/lib/x86_64-linux-gnu/plymouth//.so) missing, skipping that theme. 请参考下边 注意 中的第二条. 注意若文件夹含有大小写,请确保主题文件夹名称,其中的 xxx.plymouth,以及其中的内容大小写一致.如我的文件夹是 Paw-Ubuntu-Floral, 其中有 paw-ubuntu-floral.plymouth 文件,其中的内容是 [Plymouth Theme] Name=Paw Ubuntu/Mint Floral theme Description=Paw Ubuntu/Mint Floral plymouth theme ModuleName=script [script] ImageDir=/lib/plymouth/themes/Paw-Ubuntu-Floral ScriptFile=/lib/plymouth/themes/Paw-Ubuntu-Floral/mdv.script 发现其中的 paw-ubuntu-floral.plymouth 为小写,将其改为大写,以和其它两项保持一致. $ sudo mv paw-ubuntu-floral.plymouth Paw-Ubuntu-Floral.plymouth xxx.plymouth 内容中有 /lib/plymouth, Ubuntu 16.04 以后该文件夹已经改为了 /usr/share, 因此将其改为 ImageDir=/usr/share/plymouth/themes/Paw-Ubuntu-Floral ScriptFile=/usr/share/plymouth/themes/Paw-Ubuntu-Floral/mdv.script 更改之后继续进行 安装配置 即可. 参考资料 如何更改Ubuntu或Linux Mint开机启动画面 Unable to use a custom splash screen in Ubuntu 16.04LTS 在Ubuntu中通过update-alternatives切换软件版本]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>beautify</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu grub 引导界面美化]]></title>
    <url>%2F2018%2F04%2F05%2Fubuntu-grub-beautify%2F</url>
    <content type="text"><![CDATA[小编近来鼓捣电脑, 装了双系统 win10 + Ubuntu 16.04, 忍不了开机时 ubuntu 自带的 grub 引导界面,就是选择进入系统的那个界面. 于是研究了研究, 成功将其美化了下. 一点体会许多博客上都推荐使用 burg,一个可以替代 grub 的引导程序.但是小编试了好久也没有成功,这里收集了几篇指导,感兴趣的可以尝试.如果你成功了,希望不吝赐教: 如何在Ubuntu 16.04上用BURG Boot Loader替换GRUB Ubuntu 14.04引导界面美化（burg） Ubuntu 11.04下非常漂亮的GRUB引导界面 我的方法我是采用了直接更换 grub 主题的方式,比较简单. 选择主题GRUB Themes 上有许多漂亮的主题,挑选一个,并下载到本地.比如我选择了这个: 解压安装找到下载文件所在文件夹: $ tar zxvf blur-grub2_fullhd.tar.gz # 解压 $ cd blur-grub2_fullhd $ sudo ./install.sh # 安装 运行效果如下: ~/Downloads/blur-grub2_fullhd ▶ sudo ./install.sh [sudo] password for tian: ==&gt; Copying files... You must set the theme in your GRUB config file, Would you like to do it now? [y/n] y ==&gt; Applying changes... Generating grub configuration file ... Found theme: /boot/grub/themes/blur-grub2-fullhd/theme.txt Found linux image: /boot/vmlinuz-4.13.0-37-generic Found initrd image: /boot/initrd.img-4.13.0-37-generic Found Windows Boot Manager on /dev/sda1@/EFI/Microsoft/Boot/bootmgfw.efi Adding boot menu entry for EFI firmware configuration done -&gt; Theme successfuly applied! -&gt; Restart your PC to check it out. 提示成功就可以了,你可以重启电脑看看. 查看安装之后你可以在 /boot/grub/themes/ 中找到新生成的文件夹 blur-grub2-fullhd, grub 的配置文件是 /etc/default/grub, 在最后边即可以看到 GRUB_THEME=/boot/grub/themes/blur-grub2-fullhd/theme.txt 关于它的说明可以参考 Grub 官方网站 和 Google burg wiki,一般常更改的是 GRUB_DEFAULT=&quot;2&quot; # 开机时默认选择的系统,数值为 n-1 GRUB_TIMEOUT=&quot;5&quot; # 在引导界面停留的时间,单位秒 了解这些你就可以手动更改主题了,记得每次更改 /etc/default/grub 后, 运行 $ sudo update-grub 更新配置. 图形工具安装图形界面工具 Grub Customizer,可以很方便的定制你的 grub 引导页. sudo add-apt-repository ppa:danielrichter2007/grub-customizer sudo apt-get update sudo apt-get install grub-customizer 打开后可能遇到你若不是用的上边提到的 burg ,就选择否,进入后可看到你选择的主题你可以选择其它主题,也可以自定义主题,更改后点击保存即可(相当于运行了 $ sudo update-grub). 至此,我们了解了 grub 主题更改.如有问题,欢迎留言.]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>grub</tag>
        <tag>beautify</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + Next 配置个性主题]]></title>
    <url>%2F2018%2F04%2F05%2Fhexo-next-theme-set%2F</url>
    <content type="text"><![CDATA[成功搭建 Hexo 博客之后,如何配置使自己的博客更加的美观呢?本文介绍了 Hexo 主题更换,主题配置,图标更改,撰写博客,评论集成,阅读次数记录等等内容,跟着小编一起让自己的博客更加美观吧! 主题更换Hexo 主题多样,在 Hexo官方主题 里有很多推荐,选择你喜欢的一款,相应的 github 仓库都会有具体的安装介绍. 主题的安装以及配置基本上差不多,小编选择的是 NexT主题,下面就以其为例进行介绍. 安装Next 主页 有各种版本的安装过程, 下边是选取的稳定版本的安装.切换到你的 Hexo 根目录. $ cd Hexo/blog $ ls _config.yml node_modules package.json public scaffolds source themes 执行命令 $ mkdir themes/next $ curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d &apos;&quot;&apos; -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1 成功安装后,我们需更改 Hexo 的配置文件, 即 Hexo/blog/_config.yml, 以后我们称其为 站点配置文件,它的各项参数可参考 Hexo 配置文件.你需更改参数theme: landscape 为 theme: next,除此之外我又做了如下修改: title: TYJ&apos;s Blog subtitle: study for fun description: 心与竹俱空 念同山共静 author: TYJ language: zh-Hans url: http://tianyijian.github.io 保存退出,运行 hexo s,浏览器打开 http://localhost:4000, 此时即可看到新配置的优美博客了. 另外注意的是 Next 主题本身即有四个小主题, 在主题的配置文件, 即 themes/next/_config.yml, 以后称其为 主题配置文件 , 中可进行切换. # Schemes #scheme: Muse scheme: Mist #scheme: Pisces #scheme: Gemini 撰写推文更换了新的主题,你是否好奇如何写一篇新的文章呢? $ hexo new &quot;FirstBlog&quot; 新建的博客位于 Hexo/blog/source/_posts/FirstBlog.md, 并且有了简单的格式.写博客需要了解 markdown 语法, 你可以 参考 Markdown 语法手册. 这里我简单写了一句话 --- title: FirstBlog date: 2018-04-04 23:38:59 tags: --- ## This is my first blog! 保存退出,依次执行 hexo g hexo s, 即可在 http://localhost:4000查看,当然,也可以接着执行 hexo d 推送到你的 github 上, 在 https://user-name.github.io 上查看. 主题配置设置阅读原文我们发现原有的博客 Hello World 是打开的,那么怎么让每篇博客默认打开一部分,显示出阅读原文呢?找到 主题 Next 的配置文件, 即 themes/next/_config.yml, 以后称其为 主题配置文件. 找到 auto_excerpt ,将其设为 true. auto_excerpt: enable: true length: 150 更改网站图标选择一张你喜欢的图片命名为 favicon.ico, 放在 新建的Hexo/blog/source/images 文件夹下. 然后在 主题配置文件 中作如下更改 ( 名字可任意,对应即可 ): favicon: small: images/favicon.ico medium: images/favicon.ico 更改侧栏头像选择一张喜欢的图片 avatar.png, 放在 /themes/source/images 中, 在 主题配置文件中 作如下设置. avatar: /images/avatar.png 背景特效设置Next 主题自带了几种非常优美得背景特效, 在主题配置文件中可以找到.canvas_nest three_waves canvas_lines canvas_sphere你只需将某个设为 true 即可. 阅读次数统计小编使用了leancloud进行次数统计,它的注册你可以参考为 Next 主题添加阅读次数统计功能, 现在的 Next 主题已经接入了leancloud, 只需在 主题配置文件中做修改即可: # Show number of visitors to each article. # You can visit https://leancloud.cn get AppID and AppKey. leancloud_visitors: enable: true app_id: your_app_id app_key: your_app_key 集成评论系统目前小编使用的 diuqus 评论,同样的,强大的 Next 主题也接入了这个功能, 在主题配置文件中作如下修改: # Disqus disqus: enable: true shortname: your_short_name count: true 其他配置Next 主题配置 中提供了许多其他的配置,诸如 标签页面, 打赏功能, 公益404页面等,也介绍了许多 第三方服务集成, 你可以进行配置. 参考资料 Hexo+Github搭建个人博客(二)——配置&amp;主题 手把手教你使用Hexo + Github Pages搭建个人独立博客 Next 官方使用文档 Markdown 语法手册]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + Github 搭建个人博客]]></title>
    <url>%2F2018%2F03%2F26%2Fhexo-github-blog%2F</url>
    <content type="text"><![CDATA[小白的成长之路，使用 Hexo + Github 搭建属于自己的博客！快来开启博客之旅吧！ 环境配置Github仓库建立前去注册 Github 账号，并建立仓库 user-name.github.io, 此处的 user-name 替换为你的 github 账号名，且仓库需设置为 Public。 安装 Node.js使用Hexo主题需要配置 Node.js，按照官方文档一步步安装即可。若有问题，也可参考 Node.js 安装和配置。 安装 GitGit Bash 是windows平台常用的工具，掌握它的使用可以让你很好的和 github 进行交接，管理你的仓库。并且它在Windows平台模拟出了Linux环境，使用 Linux 常用命令 即可操作，对于它的某些使用我会在以后介绍。你可以在这里下载 Git ，并推荐给你一个学习网站 廖雪峰 Git 教程，对于搭建博客来说，安装Git并且学会简单的Linux命令就可以了。 安装 Hexo本地建立文件夹HEXO，然后打开Git Bash（windows cmd 亦可）， 切换到相应目录。 $ cd d:/HEXO # 你建立的存储Hexo的文件夹 $ npm install hexo-cli -g $ hexo init blog # 创建目录并初始化，blog为你的博客文件夹名，可任取 $ cd blog $ npm install # 安装依赖 $ hexo g $ hexo s 此时浏览器打开 http://localhost:4000/，即可看到你的博客界面了。 Hexo 常用命令 hexo generate （可简写为 hexo g） 生成静态文件，你会发现blog目录下多了public文件夹 hexo server （可简写为 hexo s） 开启本地端口，可用于预览自己的博客 hexo deploy （可简写为 hexo d） 将代码推送到远端仓库，接下来会用到。 hexo clean 删除 public 文件夹，一般用于hexo g 之前 部署到 Github Pages需安装扩展 $ npm install hexo-deployer-git --save若你首次使用 git 进行提交代码,需配置本地 git git config --global user.email &quot;you@example.com&quot; git config --global user.name &quot;Your Name&quot; 以及添加 SSH 公钥,可参考 Github SSH help.在 d:/HEXO/blog 目录下有一个 _config.yml，在最末尾找到 deploy：，做如下修改： deploy: type: git repo: git@github.com:Tianyijian/Tianyijian.github.io.git branch: master 其中的 repo 为你新建 github 仓库 user-name.github.io 后所得。 保存并退出，然后执行 hexo d .此时浏览器打开 https://user-name.github.io，即可看到你的博客成功放在了网上！ 参考资料 手把手教你使用Hexo + Github Pages搭建个人独立博客]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
</search>
